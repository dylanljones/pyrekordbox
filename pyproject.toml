
[tool.poetry]
name = "pyrekordbox"
description = "Inofficial Python package for interacting with the library of Pioneers Rekordbox DJ software."
readme = "README.md"
authors = ["Dylan Jones <dylanljones94@gmail.com>"]
license = "MIT"
version = "0.3.3"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
]

[tool.poetry.dependencies]
python = ">=3.8"
bidict = ">=0.21.0"
blowfish = ">=0.6.0"
construct = ">=2.10.0"
numpy = ">=1.19.0"
packaging = "*"
psutil = ">=5.9.0"
sqlalchemy = ">=2.0.0"
frida-tools = "*"
python-dateutil = "*"
hypothesis = ">=6.0.0"
pytest = ">=6.2.0"
pytest-cov = "*"

[tool.poetry.extras]
test = ["hypothesis", "pytest", "pytest-cov"]

[tool.poetry.urls]
homepage = "https://github.com/dylanljones/pyrekordbox"
documentation = "https://pyrekordbox.readthedocs.io/en/stable/"
repository = "https://github.com/dylanljones/pyrekordbox"
bug_tracker = "https://github.com/dylanljones/pyrekordbox/issues"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
write_to = "pyrekordbox/_version.py"


# -- Ruff ------------------------------------------------------------------------------

[tool.ruff]
exclude = [
    ".git",
    ".idea",
    "__pycache__",
    "build",
    "dist",
    ".ruff_cache",
    "*/structs.py",
    "*/_version.py",
    "docs/*",
]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "F", # flake8
    "E", # pycodestyle Errors
    "W", # pycodestyle Warnings
    "I", # isort
    "NPY", # Numpy
    "N", # pep8-naming
    "D", # pydocstyle
]
ignore = [
    "E203",  # Whitespace before ':'
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D401", # First line should be in imperative mood
    "D403", # First word of the first line should be capitalized
    "D404", # First word of the docstring should not be "This"
    #"N802", # Function name should be lowercase
    #"N803", # Argument name should be lowercase
    "N813", # Camelcase imported as lowercase
    #"N815", # Variable in class scope should not be mixedCase
    "N818", # Exception name should be named with an Error suffix
]
fixable = ["ALL"]  # Allow fix for all enabled rules (when `--fix`) is provided.
unfixable = []

[tool.ruff.lint.per-file-ignores]
"*__init__.py" = ["F401"]
"rbxml.py" = ["N803"]
"tables.py" = ["N802", "N815"]


[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
combine-as-imports = true
length-sort = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


# -- Coverage --------------------------------------------------------------------------

[tool.coverage.run]
branch = false
source = ["pyrekordbox"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",

    "def __repr__",
    "def __str__",

    "@abstract",
    "@property",

    "raise AssertionError",
    "raise NotImplementedError",

    "if 0:",
    "if __name__ == .__main__.:"
]
omit = [
    "pyrekordbox/utils.py",
    "pyrekordbox/config.py",
    "pyrekordbox/_version.py",
    "pyrekordbox/__main__.py",
]
ignore_errors = true
